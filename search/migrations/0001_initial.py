# Generated by Django 4.2.7 on 2025-09-15 07:41

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("videos", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TrendingTopic",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("topic", models.CharField(max_length=100, unique=True)),
                ("hashtag", models.CharField(blank=True, max_length=100)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("general", "General"),
                            ("entertainment", "Entertainment"),
                            ("music", "Music"),
                            ("news", "News"),
                            ("sports", "Sports"),
                            ("politics", "Politics"),
                            ("technology", "Technology"),
                            ("regional", "Regional"),
                        ],
                        default="general",
                        max_length=20,
                    ),
                ),
                ("search_count", models.PositiveIntegerField(default=0)),
                ("video_count", models.PositiveIntegerField(default=0)),
                ("engagement_score", models.FloatField(default=0.0)),
                ("region", models.CharField(default="India", max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("is_promoted", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-engagement_score", "-updated_at"],
                "indexes": [
                    models.Index(
                        fields=["category", "is_active", "engagement_score"],
                        name="search_tren_categor_a68407_idx",
                    ),
                    models.Index(
                        fields=["region", "is_active", "updated_at"],
                        name="search_tren_region_397205_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PopularSearch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("query", models.CharField(max_length=200, unique=True)),
                ("search_count", models.PositiveIntegerField(default=0)),
                ("daily_searches", models.PositiveIntegerField(default=0)),
                ("weekly_searches", models.PositiveIntegerField(default=0)),
                ("monthly_searches", models.PositiveIntegerField(default=0)),
                ("growth_rate", models.FloatField(default=0.0)),
                ("is_trending", models.BooleanField(default=False)),
                ("top_regions", models.JSONField(default=dict)),
                ("primary_language", models.CharField(default="en", max_length=10)),
                ("last_updated", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-search_count"],
                "indexes": [
                    models.Index(
                        fields=["is_trending", "search_count"],
                        name="search_popu_is_tren_da620c_idx",
                    ),
                    models.Index(
                        fields=["primary_language", "search_count"],
                        name="search_popu_primary_290805_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SearchHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("query", models.CharField(max_length=200)),
                ("results_count", models.PositiveIntegerField(default=0)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "clicked_result",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="videos.video",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="search_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "created_at"],
                        name="search_sear_user_id_677f6a_idx",
                    ),
                    models.Index(
                        fields=["query", "created_at"],
                        name="search_sear_query_112b0f_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="RecommendedVideo",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "recommendation_type",
                    models.CharField(
                        choices=[
                            ("trending", "Trending"),
                            ("personalized", "Personalized"),
                            ("channel_based", "Based on Subscriptions"),
                            ("category_based", "Based on Category Preference"),
                            ("collaborative", "Users Also Watched"),
                            ("regional", "Regional Content"),
                        ],
                        max_length=20,
                    ),
                ),
                ("score", models.FloatField()),
                ("shown_count", models.PositiveIntegerField(default=0)),
                ("clicked", models.BooleanField(default=False)),
                ("dismissed", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "video",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to="videos.video",
                    ),
                ),
            ],
            options={
                "ordering": ["-score", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "recommendation_type", "score"],
                        name="search_reco_user_id_b584b4_idx",
                    ),
                    models.Index(
                        fields=["video", "created_at"],
                        name="search_reco_video_i_234c69_idx",
                    ),
                ],
                "unique_together": {("user", "video")},
            },
        ),
    ]
